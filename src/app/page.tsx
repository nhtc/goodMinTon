"use client"
import React, { useEffect, useRef } from "react"
import Link from "next/link"
import { TypeAnimation } from "react-type-animation"
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
} from "recharts"
import CountUp from "react-countup"
import NotificationDemo from "../components/NotificationDemo"
import { Container, Section } from "../components/Layout"
import { StatCard, InfoCard } from "../components/Card"
import styles from "./page.module.css"

const HomePage = () => {
  const observerRef = useRef<IntersectionObserver | null>(null)

  // Sample data for charts
  const monthlyData = [
    { name: "T1", games: 24, members: 45 },
    { name: "T2", games: 32, members: 52 },
    { name: "T3", games: 28, members: 48 },
    { name: "T4", games: 35, members: 58 },
    { name: "T5", games: 42, members: 65 },
    { name: "T6", games: 38, members: 62 },
  ]

  const costData = [
    { name: "S√¢n c·∫ßu", value: 65, color: "#4ade80" },
    { name: "C·∫ßu l√¥ng", value: 25, color: "#60a5fa" },
    { name: "Kh√°c", value: 10, color: "#f59e0b" },
  ]

  const COLORS = ["#4ade80", "#60a5fa", "#f59e0b"]

  useEffect(() => {
    // Intersection Observer for smooth scroll animations
    observerRef.current = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add(styles.animate)
          }
        })
      },
      {
        threshold: 0.1,
        rootMargin: "0px 0px -100px 0px",
      }
    )

    // Observe all elements with animate-on-scroll class
    const elements = document.querySelectorAll(`.${styles.animateOnScroll}`)
    elements.forEach(el => observerRef.current?.observe(el))

    return () => {
      if (observerRef.current) {
        observerRef.current.disconnect()
      }
    }
  }, [])

  return (
    <div className={`min-h-screen ${styles.homeGradient} smooth-scroll`}>
      <Container>
        {/* Hero Section */}
        <Section className={styles.heroSection}>
          <div className={`text-center mb-20 ${styles.animateOnScroll}`}>
            <h1 className={`${styles.heroTitle} ${styles.colorfulText}`}>
              <TypeAnimation
                sequence={[
                  "T√≠nh ti·ªÅn C·∫ßu L√¥ng", // Type this text
                  2000, // Wait 2 seconds
                  "Qu·∫£n l√Ω Club d·ªÖ d√†ng", // Type this text
                  2000, // Wait 2 seconds
                  "T√≠nh ti·ªÅn C·∫ßu L√¥ng", // Back to main text
                ]}
                wrapper='span'
                cursor={true}
                repeat={Infinity}
                style={{
                  fontSize: "inherit",
                  fontWeight: "inherit",
                  background: "inherit",
                  WebkitBackgroundClip: "inherit",
                  WebkitTextFillColor: "inherit",
                  backgroundClip: "inherit",
                  display: "inline-block",
                }}
              />
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed mt-6">
              H·ªá th·ªëng qu·∫£n l√Ω c√¢u l·∫°c b·ªô c·∫ßu l√¥ng hi·ªán ƒë·∫°i, gi√∫p b·∫°n d·ªÖ d√†ng t√≠nh to√°n chi ph√≠, 
              theo d√µi th√†nh vi√™n v√† t·∫°o QR code thanh to√°n t·ª± ƒë·ªông.
            </p>
          </div>

          {/* Statistics Section */}
          <Section className={`${styles.statsSection} ${styles.animateOnScroll}`}>
            <div className={styles.statsGrid}>
              <StatCard
                title="Tr·∫≠n ƒë·∫•u ho√†n th√†nh"
                value="247"
                icon="üè∏"
                color="primary"
              />
              <StatCard
                title="Th√†nh vi√™n t√≠ch c·ª±c"
                value="89"
                icon="üë•"
                color="success"
              />
              <StatCard
                title="T·ªïng chi ph√≠ qu·∫£n l√Ω"
                value="12,500,000‚Ç´"
                icon="üí∞"
                color="warning"
              />
              <StatCard
                title="M·ª©c ƒë·ªô h√†i l√≤ng"
                value="95%"
                icon="üìà"
                color="info"
              />
            </div>
          </Section>

          {/* Charts Section */}
          <div className={`${styles.chartsSection} ${styles.animateOnScroll}`}>
            <div className={styles.chartsGrid}>
              <div className={styles.chartCard}>
                <h3 className={styles.chartTitle}>üìä Ho·∫°t ƒë·ªông theo th√°ng</h3>
                <div className={styles.chartContainer}>
                  <ResponsiveContainer width='100%' height={300}>
                    <BarChart data={monthlyData}>
                      <CartesianGrid strokeDasharray='3 3' />
                      <XAxis dataKey='name' />
                      <YAxis />
                      <Tooltip />
                      <Bar dataKey='games' fill='#4ade80' name='Tr·∫≠n ƒë·∫•u' />
                      <Bar dataKey='members' fill='#60a5fa' name='Th√†nh vi√™n' />
                    </BarChart>
                  </ResponsiveContainer>
                </div>
              </div>

              <div className={styles.chartCard}>
                <h3 className={styles.chartTitle}>üí∏ Ph√¢n b·ªï chi ph√≠</h3>
                <div className={styles.chartContainer}>
                  <ResponsiveContainer width='100%' height={300}>
                    <PieChart>
                      <Pie
                        data={costData}
                        cx='50%'
                        cy='50%'
                        labelLine={false}
                        label={({ name, percent }) =>
                          `${name} ${((percent || 0) * 100).toFixed(0)}%`
                        }
                        outerRadius={80}
                        fill='#8884d8'
                        dataKey='value'
                      >
                        {costData.map((entry, index) => (
                          <Cell
                            key={`cell-${index}`}
                            fill={COLORS[index % COLORS.length]}
                          />
                        ))}
                      </Pie>
                      <Tooltip />
                    </PieChart>
                  </ResponsiveContainer>
                </div>
              </div>
            </div>
          </div>

          {/* Feature Cards */}
          <div className={styles.featuresGrid}>
            <div
              className={`${styles.featureCard} ${styles.primaryCard} ${styles.animateOnScroll}`}
            >
              <div className={`${styles.featureIcon} ${styles.primaryIcon}`}>
                <span>üë•</span>
              </div>
              <div className={styles.featureContent}>
                <h3 className={styles.featureTitle}>Qu·∫£n l√Ω Th√†nh vi√™n</h3>
                <p className={styles.featureDescription}>
                  Th√™m, x√≥a v√† t·ªï ch·ª©c t·∫•t c·∫£ th√†nh vi√™n trong c√¢u l·∫°c b·ªô c·∫ßu
                  l√¥ng c·ªßa b·∫°n. Theo d√µi th√¥ng tin li√™n l·∫°c v√† l·ªãch s·ª≠ tham gia.
                </p>
                <div className={styles.featureBenefits}>
                  <span className={styles.benefitTag}>‚úì Th√™m nhanh</span>
                  <span className={styles.benefitTag}>‚úì T√¨m ki·∫øm d·ªÖ</span>
                  <span className={styles.benefitTag}>‚úì Th√¥ng tin ƒë·∫ßy ƒë·ªß</span>
                </div>
              </div>
              <Link
                href='/members'
                className={`${styles.featureButton} ${styles.btnPrimary}`}
              >
                <span>Qu·∫£n l√Ω Th√†nh vi√™n</span>
                <span className={styles.buttonArrow}>‚Üí</span>
              </Link>
            </div>

            <div
              className={`${styles.featureCard} ${styles.secondaryCard} ${styles.animateOnScroll}`}
            >
              <div className={`${styles.featureIcon} ${styles.secondaryIcon}`}>
                <span>üìÖ</span>
              </div>
              <div className={styles.featureContent}>
                <h3 className={styles.featureTitle}>L·ªãch s·ª≠ Tr·∫≠n ƒë·∫•u</h3>
                <p className={styles.featureDescription}>
                  Theo d√µi t·∫•t c·∫£ c√°c tr·∫≠n ƒë·∫•u, chi ph√≠ v√† h·ªì s∆° ng∆∞·ªùi tham gia.
                  Nh·∫≠n th√¥ng tin chi ti·∫øt v·ªõi ph√¢n t√≠ch v√† b√°o c√°o chi ph√≠.
                </p>
                <div className={styles.featureBenefits}>
                  <span className={styles.benefitTag}>‚úì Theo d√µi chi ph√≠</span>
                  <span className={styles.benefitTag}>‚úì Ph√¢n t√≠ch</span>
                  <span className={styles.benefitTag}>‚úì B√°o c√°o</span>
                </div>
              </div>
              <Link
                href='/history'
                className={`${styles.featureButton} ${styles.btnSecondary}`}
              >
                <span>Xem L·ªãch s·ª≠</span>
                <span className={styles.buttonArrow}>‚Üí</span>
              </Link>
            </div>

            <div
              className={`${styles.featureCard} ${styles.accentCard} ${styles.animateOnScroll}`}
            >
              <div className={`${styles.featureIcon} ${styles.accentIcon}`}>
                <span>‚ö°</span>
              </div>
              <div className={styles.featureContent}>
                <h3 className={styles.featureTitle}>Thao t√°c Nhanh</h3>
                <p className={styles.featureDescription}>
                  Tr·ª±c ti·∫øp ghi l·∫°i tr·∫≠n ƒë·∫•u m·ªõi ho·∫∑c th√™m th√†nh vi√™n. M·ªçi th·ª©
                  b·∫°n c·∫ßn ch·ªâ c√°ch m·ªôt c√∫ nh·∫•p chu·ªôt.
                </p>
                <div className={styles.featureBenefits}>
                  <span className={styles.benefitTag}>‚úì Nh·∫≠p nhanh</span>
                  <span className={styles.benefitTag}>‚úì Form th√¥ng minh</span>
                  <span className={styles.benefitTag}>‚úì T·ª± ƒë·ªông t√≠nh</span>
                </div>
              </div>
              <div className={styles.quickActions}>
                <Link href='/history' className={styles.quickActionBtn}>
                  <span>üè∏</span>
                  <span>Tr·∫≠n m·ªõi</span>
                </Link>
                <Link href='/members' className={styles.quickActionBtn}>
                  <span>üë§</span>
                  <span>Th√™m ng∆∞·ªùi</span>
                </Link>
              </div>
            </div>
          </div>

          {/* System Features Overview */}
          <Section className={`${styles.infoSection} ${styles.animateOnScroll}`}>
            <div className={styles.infoGrid}>
              <InfoCard
                title="üéØ T√≠nh nƒÉng ch√≠nh"
                variant="info"
              >
                <ul className={styles.featureList}>
                  <li>‚úÖ Qu·∫£n l√Ω th√†nh vi√™n (th√™m/s·ª≠a/x√≥a)</li>
                  <li>‚úÖ Ghi l·∫°i chi ti·∫øt t·ª´ng tr·∫≠n ƒë·∫•u</li>
                  <li>‚úÖ T·ª± ƒë·ªông chia ti·ªÅn theo s·ªë ng∆∞·ªùi ch∆°i</li>
                  <li>‚úÖ Theo d√µi thanh to√°n realtime</li>
                  <li>‚úÖ T·∫°o QR code chuy·ªÉn kho·∫£n</li>
                  <li>‚úÖ B√°o c√°o th·ªëng k√™ chi ti·∫øt</li>
                </ul>
              </InfoCard>

              <InfoCard
                title="üìã H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng"
                variant="success"
              >
                <div className={styles.stepsList}>
                  <div className={styles.step}>
                    <span className={styles.stepNumber}>1</span>
                    <span>Th√™m th√†nh vi√™n v√†o h·ªá th·ªëng</span>
                  </div>
                  <div className={styles.step}>
                    <span className={styles.stepNumber}>2</span>
                    <span>T·∫°o tr·∫≠n ƒë·∫•u m·ªõi v·ªõi chi ph√≠</span>
                  </div>
                  <div className={styles.step}>
                    <span className={styles.stepNumber}>3</span>
                    <span>Ch·ªçn ng∆∞·ªùi tham gia</span>
                  </div>
                  <div className={styles.step}>
                    <span className={styles.stepNumber}>4</span>
                    <span>Chia s·∫ª QR thanh to√°n</span>
                  </div>
                </div>
              </InfoCard>

              <InfoCard
                title="üí° M·∫πo s·ª≠ d·ª•ng"
                variant="warning"
              >
                <div className={styles.tipsList}>
                  <div className={styles.tip}>
                    <span className={styles.tipIcon}>üè∏</span>
                    <span>Nh·∫≠p "Chi ph√≠ kh√°c" cho n∆∞·ªõc u·ªëng, v·ª£t d·ª± ph√≤ng</span>
                  </div>
                  <div className={styles.tip}>
                    <span className={styles.tipIcon}>üí∞</span>
                    <span>
                      H·ªá th·ªëng t·ª± ƒë·ªông chia ƒë·ªÅu ti·ªÅn cho t·∫•t c·∫£ th√†nh vi√™n
                    </span>
                  </div>
                  <div className={styles.tip}>
                    <span className={styles.tipIcon}>üì±</span>
                    <span>QR code c√≥ th·ªÉ m·ªü tr·ª±c ti·∫øp app ng√¢n h√†ng</span>
                  </div>
                  <div className={styles.tip}>
                    <span className={styles.tipIcon}>üë•</span>
                    <span>Theo d√µi ai ƒë√£ thanh to√°n, ai ch∆∞a thanh to√°n</span>
                  </div>
                </div>
              </InfoCard>
            </div>
          </Section>

          {/* Notification Demo Section */}
          <div className={`${styles.demoSection} ${styles.animateOnScroll}`}>
            <NotificationDemo />
          </div>

          {/* Demo Preview Section */}
          <div className={`${styles.demoSection} ${styles.animateOnScroll}`}>
            <div className={styles.demoContent}>
              <h2 className={styles.demoTitle}>üéÆ Xem tr∆∞·ªõc Demo</h2>
              <p className={styles.demoDescription}>
                Kh√°m ph√° giao di·ªán v√† t√≠nh nƒÉng c·ªßa h·ªá th·ªëng qua c√°c m√†n h√¨nh
                demo
              </p>

              <div className={styles.demoGrid}>
                <div className={styles.demoCard}>
                  <div className={styles.demoImage}>üë•</div>
                  <h3 className={styles.demoCardTitle}>Qu·∫£n l√Ω Th√†nh vi√™n</h3>
                  <p className={styles.demoCardDesc}>
                    Th√™m, s·ª≠a, x√≥a th√†nh vi√™n. T√¨m ki·∫øm nhanh v√† qu·∫£n l√Ω th√¥ng
                    tin li√™n l·∫°c.
                  </p>
                  <div className={styles.demoStats}>
                    <span className={styles.demoStat}>üìä 89 th√†nh vi√™n</span>
                    <span className={styles.demoStat}>
                      ‚ö° T√¨m ki·∫øm realtime
                    </span>
                  </div>
                </div>

                <div className={styles.demoCard}>
                  <div className={styles.demoImage}>üìÖ</div>
                  <h3 className={styles.demoCardTitle}>L·ªãch s·ª≠ Game</h3>
                  <p className={styles.demoCardDesc}>
                    Ghi l·∫°i t·ª´ng tr·∫≠n ƒë·∫•u v·ªõi chi ph√≠ s√¢n, c·∫ßu, v√† c√°c kho·∫£n ph·ª•
                    thu.
                  </p>
                  <div className={styles.demoStats}>
                    <span className={styles.demoStat}>üè∏ 247 tr·∫≠n ƒë·∫•u</span>
                    <span className={styles.demoStat}>üí∞ 12.5M ƒë√£ qu·∫£n l√Ω</span>
                  </div>
                </div>

                <div className={styles.demoCard}>
                  <div className={styles.demoImage}>üí≥</div>
                  <h3 className={styles.demoCardTitle}>Thanh to√°n QR</h3>
                  <p className={styles.demoCardDesc}>
                    T·∫°o QR code t·ª± ƒë·ªông, k·∫øt n·ªëi app ng√¢n h√†ng, theo d√µi thanh
                    to√°n.
                  </p>
                  <div className={styles.demoStats}>
                    <span className={styles.demoStat}>üì± M·ªü app ng√¢n h√†ng</span>
                    <span className={styles.demoStat}>
                      ‚úÖ Theo d√µi realtime
                    </span>
                  </div>
                </div>
              </div>

              <div className={styles.demoActions}>
                <Link href='/login' className={styles.demoButton}>
                  <span>üîë</span>
                  <span>ƒêƒÉng nh·∫≠p</span>
                  <small>(admin / password123)</small>
                </Link>
                <Link href='/members' className={styles.demoButton}>
                  <span>üëÄ</span>
                  <span>Xem ch·∫ø ƒë·ªô kh√°ch</span>
                  <small>(Ch·ªâ xem, kh√¥ng ch·ªânh s·ª≠a)</small>
                </Link>
              </div>
            </div>
          </div>

          {/* Call to Action Section */}
          <div className={`${styles.ctaSection} ${styles.animateOnScroll}`}>
            <div className={styles.ctaContent}>
              <h2 className={styles.ctaTitle}>S·∫µn s√†ng B·∫Øt ƒë·∫ßu?</h2>
              <p className={styles.ctaDescription}>
                Tham gia c√πng h√†ng ngh√¨n c√¢u l·∫°c b·ªô c·∫ßu l√¥ng ƒë√£ s·ª≠ d·ª•ng n·ªÅn t·∫£ng
                c·ªßa ch√∫ng t√¥i ƒë·ªÉ qu·∫£n l√Ω c√°c ho·∫°t ƒë·ªông c·ªßa h·ªç.
              </p>
              <div className={styles.ctaButtons}>
                <Link
                  href='/members'
                  className={`${styles.ctaButton} ${styles.primary}`}
                >
                  <span>üöÄ</span>
                  <span>B·∫Øt ƒë·∫ßu Qu·∫£n l√Ω</span>
                </Link>
                <Link
                  href='/history'
                  className={`${styles.ctaButton} ${styles.secondary}`}
                >
                  <span>üìä</span>
                  <span>Xem Demo</span>
                </Link>
              </div>
            </div>
          </div>
        </Section>
      </Container>
    </div>
  )
}

export default HomePage
